#include "Common.h"
#include "Graphics.h"

//We could just use 6 floats instead of this structure
//equally as valid but this is cleaner
struct Position{
  float x,y,z;
};

Position trianglePos={-1.5f,0.0,-6.0f};
Position squarePos={1.5f,0.0f,-6.0f};

void render()
{
    //old imediate mode!
    //Set the clear colour(background)
    glClearColor( 0.0f, 0.0f, 0.0f, 0.0f );
    //clear the colour and depth buffer
    glClear( GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT );

    //Swith to ModelView
    glMatrixMode( GL_MODELVIEW );
    //Reset using the Indentity Matrix
    glLoadIdentity( );
    //translate
    glTranslatef( trianglePos.x, trianglePos.y,trianglePos.z );

    //Begin drawing triangles
    glBegin( GL_TRIANGLES );
        glVertex3f(  0.0f,  1.0f, 0.0f ); // Top
        glVertex3f( -1.0f, -1.0f, 0.0f ); // Bottom Left
        glVertex3f(  1.0f, -1.0f, 0.0f ); // Bottom Right
    glEnd( );

    //Reset using the Indentity Matrix, had to add this to Reset the
    //position of the ModelView matrix
    glLoadIdentity( );

    //Translate model view 3 units from previos position
    glTranslatef( squarePos.x, squarePos.y, squarePos.z );

    //Begin Drawing Quads
    glBegin( GL_QUADS );
        glVertex3f( -1.0f,  1.0f, 0.0f ); // Top Left
        glVertex3f(  1.0f,  1.0f, 0.0f ); // Top Right
        glVertex3f(  1.0f, -1.0f, 0.0f ); // Bottom Right
        glVertex3f( -1.0f, -1.0f, 0.0f ); // Bottom Left
    glEnd( );
}

int main(int argc, char * arg[])
{
    //Controls the game loop
    bool run=true;
    bool pause=false;
    // init everyting - SDL, if it is nonzero we have a problem
    if(SDL_Init(SDL_INIT_EVERYTHING) != 0)
    {
        std::cout << "ERROR SDL_Init " <<SDL_GetError()<< std::endl;

        return -1;
    }

    //Create a window
    SDL_Window * window = SDL_CreateWindow(
                                           "SDL",             // window title
                                           SDL_WINDOWPOS_CENTERED,     // x position, centered
                                           SDL_WINDOWPOS_CENTERED,     // y position, centered
                                           640,                        // width, in pixels
                                           480,                        // height, in pixels
                                           SDL_WINDOW_OPENGL           // flags
                                           );
    // Create an OpenGL context associated with the window.
    SDL_GLContext glcontext = SDL_GL_CreateContext(window);

    //Call our InitOpenGL Function
    initOpenGL();
    //Set our viewport
    setViewport(640,480);

    //Value to hold the event generated by SDL
    SDL_Event event;
    //Game Loop
    while(run)
    {
        //While we still have events in the queue
        while (SDL_PollEvent(&event)) {
            //Get event type
            if (event.type == SDL_QUIT || event.type == SDL_WINDOWEVENT_CLOSE) {
                //set our boolean which controls the loop to false
                run = false;
            }
            if (event.type==SDL_WINDOWEVENT)
            {
                switch (event.window.event) {
                    case SDL_WINDOWEVENT_MINIMIZED:
                            pause=true;
                        break;
                    default:
                        break;
                }
            }
            //Check for key down event
            if (event.type==SDL_KEYDOWN)
            {
              //and then check the actual key press
              if (event.key.keysym.sym==SDLK_LEFT)
              {
                squarePos.x-=0.1f;
              }
              else if (event.key.keysym.sym==SDLK_RIGHT)
              {
                squarePos.x+=0.1f;
              }
              if (event.key.keysym.sym==SDLK_a)
              {
                trianglePos.x-=0.1f;
              }
              else if (event.key.keysym.sym==SDLK_d)
              {
                trianglePos.x+=0.1f;
              }
            }
        }

        //render
        render();
        //Call swap so that our GL back buffer is displayed
        SDL_GL_SwapWindow(window);

    }

    // clean up, reverse order!!!
    SDL_GL_DeleteContext(glcontext);
    SDL_DestroyWindow(window);
    SDL_Quit();

    return 0;
}
